openapi: 3.0.0
info:
  title: Stubbed Products Service
  description: Provides a basic, stubbed-out REST API with no backend dependencies, for testing purposes.
  version: 1.0.1
#servers:
#  - url: http://api.example.com/v1
#    description: Optional server description, e.g. Main (production) server
#  - url: http://staging-api.example.com
#    description: Optional server description, e.g. Internal staging server for testing
paths:
  /products:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - products
      parameters:
        - name: limit
          in: query
          description: How many products to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of products
          headers:
            x-next:
              description: A link to the next page of products
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a product
      operationId: createProducts
      tags:
        - products
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/{productId}:
    get:
      summary: Info for a specific product
      operationId: showProductById
      tags:
        - products
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Products:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Product"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string